<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 접속 시 폼 계정 등 -->
	<security:http>
		
		<!-- /secu/all 접속 시 모든 유저에게 접근 허용 permitAll -->
		<security:intercept-url pattern="/secu/all" access="permitAll" />
		
		<!-- member에게만 접근 허용 -->
		<security:intercept-url pattern="/secu/member" access="hasRole('ROLE_MEMBER')"/>
		<!-- secu/admin은 admin에게만 접근 허용 -->
		<security:intercept-url pattern="/secu/admin" access="hasRole('ROLE_ADMIN')" />	
		<security:form-login/>
		
		<!-- 에러페이징 -->
		<security:access-denied-handler error-page="/accessError"/>
		
	</security:http>
	
	<!-- 인증 -->
	<security:authentication-manager>
		<security:authentication-provider>
		
			<!-- 스프링 시큐리티에서는 반드시 비밀번호를 암호화해서 처리하도록 강제됩니다.
			아직 암호화 설정을 하지 않았기 때문에 암호화 이전에 로그인만 테스트하기 위해
			비밀번호 앞에 "{noop}"를 추가해 암호화 기능을 꺼두었습니다. -->
			<security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER" />
				<!-- admin role과 member role을 함꼐 주어야 접속이 가능해집니다. -->
				<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
			</security:user-service>
		</security:authentication-provider>
		
		
		
	</security:authentication-manager>

</beans>
