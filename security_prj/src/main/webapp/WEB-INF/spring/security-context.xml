<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="customAccessDenied" class="com.ict.security.CustomAccessDeniedHandler"/>
	<bean id="customLoginSuccess" class="com.ict.security.CustomLoginSuccessHandler"/>

	<!-- 접속 시 폼 계정 등 -->
	<security:http>
		
		<!-- /secu/all 접속 시 모든 유저에게 접근 허용 permitAll -->
		<security:intercept-url pattern="/secu/all" access="permitAll" />
		
		<!-- member에게만 접근 허용 -->
		<security:intercept-url pattern="/secu/member" access="hasRole('ROLE_MEMBER')"/>
		<!-- secu/admin은 admin에게만 접근 허용 -->
		<security:intercept-url pattern="/secu/admin" access="hasRole('ROLE_ADMIN')" />	
		
		<!-- 에러페이징 -->
		<!-- 디폴트 accessdeniedhandler 대신 커스텀을 쓰도록 수정하였습니다. -->
		<!--  <security:access-denied-handler error-page="/accessError"/>-->
		<security:access-denied-handler ref="customAccessDenied"/>
		<!-- beans graph에 추가되어있는지 확인해주세요 -->
	
		<!-- 로그아웃 처리 -->
		<security:logout logout-url="/customLogout" invalidate-session="true"/>

		<security:form-login login-page="/customLogin"
				authentication-success-handler-ref="customLoginSuccess"/>
		
	</security:http>
	
	<!-- 인증 -->
	<security:authentication-manager>
		<security:authentication-provider>
		
			
			<!-- <security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER" />
				admin role과 member role을 함꼐 주어야 접속이 가능해집니다.
				<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
			</security:user-service> 
		 	-->
		 	
		 	<!--  이제 인증 매니저는 DB를 쓰도록 변경합니다. Hikari 설정을 dataSource라는 이름으로 해두었으므로 연결해줍니다 -->
		 	<security:jdbc-user-service data-source-ref="dataSource"/>
		 	
		</security:authentication-provider>
		
	</security:authentication-manager>

</beans>
